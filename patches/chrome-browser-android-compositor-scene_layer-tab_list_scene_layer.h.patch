diff --git a/chrome/browser/android/compositor/scene_layer/tab_list_scene_layer.h b/chrome/browser/android/compositor/scene_layer/tab_list_scene_layer.h
index f998ad33112d9d9e47dc3d99b724969865c80b3a..535f2c29101ad18780754c4ad30d8570b8cb3916 100644
--- a/chrome/browser/android/compositor/scene_layer/tab_list_scene_layer.h
+++ b/chrome/browser/android/compositor/scene_layer/tab_list_scene_layer.h
@@ -26,6 +26,8 @@ namespace android {
 class TabContentManager;
 class TabLayer;
 
+class LayerTitleCache;
+
 class TabListSceneLayer : public SceneLayer {
  public:
   TabListSceneLayer(JNIEnv* env, const base::android::JavaRef<jobject>& jobj);
@@ -49,7 +51,7 @@ class TabListSceneLayer : public SceneLayer {
   // TODO(meiliang): This method needs another parameter, a resource that can be
   // used to indicate the currently selected tab for the TabLayer.
   // TODO(dtrainor): This method is ridiculous.  Break this apart?
-  void PutTabLayer(JNIEnv* env,
+  void PutTabLayer_Chromium(JNIEnv* env,
                    const base::android::JavaParamRef<jobject>& jobj,
                    jint id,
                    const base::android::JavaRef<jintArray>& tab_ids_list,
@@ -93,6 +95,61 @@ class TabListSceneLayer : public SceneLayer {
                    jfloat side_border_scale,
                    jboolean inset_border);
 
+  void PutTabLayer(JNIEnv* env,
+                   const base::android::JavaParamRef<jobject>& jobj,
+                   jint id,
+                   jint close_button_resource_id,
+                   jboolean close_button_on_right,
+                   jfloat pivot_x,
+                   jfloat pivot_y,
+                   jfloat rotation_x,
+                   jfloat rotation_y,
+                   jfloat close_alpha,
+                   jfloat close_btn_width,
+                   jfloat close_btn_asset_size,
+                   jint close_button_color,
+                   jboolean show_tab_title,
+                   const base::android::JavaRef<jintArray>& tab_ids_list,
+                   jboolean use_tab_ids_list,
+                   jint toolbar_resource_id,
+                   jint shadow_resource_id,
+                   jint contour_resource_id,
+                   jint border_resource_id,
+                   jint border_inner_shadow_resource_id,
+                   jboolean can_use_live_layer,
+                   jint tab_background_color,
+                   jboolean incognito,
+                   jfloat x,
+                   jfloat y,
+                   jfloat width,
+                   jfloat height,
+                   jfloat content_width,
+                   jfloat content_height,
+                   jfloat shadow_x,
+                   jfloat shadow_y,
+                   jfloat shadow_width,
+                   jfloat shadow_height,
+                   jfloat alpha,
+                   jfloat border_alpha,
+                   jfloat border_inner_shadow_alpha,
+                   jfloat contour_alpha,
+                   jfloat shadow_alpha,
+                   jfloat static_to_view_blend,
+                   jfloat border_scale,
+                   jfloat saturation,
+                   jfloat brightness,
+                   jboolean show_toolbar,
+                   jint default_theme_color,
+                   jint toolbar_background_color,
+                   jboolean anonymize_toolbar,
+                   jint toolbar_textbox_resource_id,
+                   jint toolbar_textbox_background_color,
+                   jfloat toolbar_alpha,
+                   jfloat toolbar_y_offset,
+                   jfloat content_offset,
+                   jfloat side_border_scale,
+                   jboolean inset_border);
+
   void PutBackgroundLayer(JNIEnv* env,
                           const base::android::JavaParamRef<jobject>& jobj,
                           jint resource_id,
@@ -104,6 +161,11 @@ class TabListSceneLayer : public SceneLayer {
       const base::android::JavaParamRef<jobject>& jobj,
       const base::android::JavaParamRef<jobject>& jtab_content_manager,
       const base::android::JavaParamRef<jobject>& jresource_manager);
+  
+  void SetStackDependencies(
+      JNIEnv* env,
+      const base::android::JavaParamRef<jobject>& jobj,
+      const base::android::JavaParamRef<jobject>& jlayer_title_cache);
 
   void OnDetach() override;
   bool ShouldShowBackground() override;
@@ -122,6 +184,8 @@ class TabListSceneLayer : public SceneLayer {
   SkColor background_color_;
 
   scoped_refptr<cc::Layer> own_tree_;
+
+  raw_ptr<LayerTitleCache> layer_title_cache_;
 };
 
 }  // namespace android
