diff --git a/chrome/browser/android/compositor/scene_layer/tab_list_scene_layer.cc b/chrome/browser/android/compositor/scene_layer/tab_list_scene_layer.cc
index 6ccae83d6c1d35f3b01dbe9b3a35b55ee4315056..cdd53daa73348b8ff20b8d48197d26468ede1175 100644
--- a/chrome/browser/android/compositor/scene_layer/tab_list_scene_layer.cc
+++ b/chrome/browser/android/compositor/scene_layer/tab_list_scene_layer.cc
@@ -14,6 +14,9 @@
 #include "chrome/browser/android/compositor/tab_content_manager.h"
 #include "ui/android/resources/resource_manager_impl.h"
 
+#include "chrome/browser/android/compositor/layer_title_cache.h"
+// #include "chrome/browser/ui/android/layouts/layouts_jni_headers/SceneLayer_jni.h"
+
 using base::android::JavaParamRef;
 using base::android::JavaRef;
 
@@ -68,7 +71,7 @@ void TabListSceneLayer::UpdateLayer(
   own_tree_->SetBounds(gfx::Size(viewport_width, viewport_height));
 }
 
-void TabListSceneLayer::PutTabLayer(
+void TabListSceneLayer::PutTabLayer_Chromium(
     JNIEnv* env,
     const JavaParamRef<jobject>& jobj,
     jint id,
@@ -137,7 +140,7 @@ void TabListSceneLayer::PutTabLayer(
 
     // TODO(meiliang): This method pass another argument, a resource that can be
     // used to indicate the currently selected tab for the TabLayer.
-    layer->SetProperties(
+    layer->SetProperties_Chromium(
         id, tab_ids, can_use_live_layer, toolbar_resource_id,
         shadow_resource_id, contour_resource_id, border_resource_id,
         border_inner_shadow_resource_id, tab_background_color, x, y, width,
@@ -157,6 +160,108 @@ void TabListSceneLayer::PutTabLayer(
   content_obscures_self_ |= content.Contains(self);
 }
 
+void TabListSceneLayer::PutTabLayer(
+    JNIEnv* env,
+    const base::android::JavaParamRef<jobject>& jobj,
+    jint id,
+    jint close_button_resource_id,
+    jboolean close_button_on_right,
+    jfloat pivot_x,
+    jfloat pivot_y,
+    jfloat rotation_x,
+    jfloat rotation_y,
+    jfloat close_alpha,
+    jfloat close_btn_width,
+    jfloat close_btn_asset_size,
+    jint close_button_color,
+    jboolean show_tab_title,
+    const base::android::JavaRef<jintArray>& tab_ids_list,
+    jboolean use_tab_ids_list,
+    jint toolbar_resource_id,
+    jint shadow_resource_id,
+    jint contour_resource_id,
+    jint border_resource_id,
+    jint border_inner_shadow_resource_id,
+    jboolean can_use_live_layer,
+    jint tab_background_color,
+    jboolean incognito,
+    jfloat x,
+    jfloat y,
+    jfloat width,
+    jfloat height,
+    jfloat content_width,
+    jfloat content_height,
+    jfloat shadow_x,
+    jfloat shadow_y,
+    jfloat shadow_width,
+    jfloat shadow_height,
+    jfloat alpha,
+    jfloat border_alpha,
+    jfloat border_inner_shadow_alpha,
+    jfloat contour_alpha,
+    jfloat shadow_alpha,
+    jfloat static_to_view_blend,
+    jfloat border_scale,
+    jfloat saturation,
+    jfloat brightness,
+    jboolean show_toolbar,
+    jint default_theme_color,
+    jint toolbar_background_color,
+    jboolean anonymize_toolbar,
+    jint toolbar_textbox_resource_id,
+    jint toolbar_textbox_background_color,
+    jfloat toolbar_alpha,
+    jfloat toolbar_y_offset,
+    jfloat content_offset,
+    jfloat side_border_scale,
+    jboolean inset_border) {
+  PutTabLayer_Chromium(
+      env, jobj, id, tab_ids_list, use_tab_ids_list, toolbar_resource_id,
+      shadow_resource_id, contour_resource_id, border_resource_id,
+      border_inner_shadow_resource_id, can_use_live_layer, tab_background_color,
+      incognito, x, y, width, height, content_width, content_height, shadow_x,
+      shadow_y, shadow_width, shadow_height, alpha, border_alpha,
+      border_inner_shadow_alpha, contour_alpha, shadow_alpha,
+      static_to_view_blend, border_scale, saturation, brightness, show_toolbar,
+      default_theme_color, toolbar_background_color, anonymize_toolbar,
+      toolbar_textbox_resource_id, toolbar_textbox_background_color,
+      toolbar_alpha, toolbar_y_offset, content_offset, side_border_scale,
+      inset_border);
+
+  // LOG(ERROR) << "SAM: " << Java_SceneLayer_getNativePtr(env, jobj);
+  if (!layer_title_cache_)
+    return;
+
+  scoped_refptr<TabLayer> layer;
+  auto iter = tab_map_.find(id);
+  if (iter != tab_map_.end()) {
+    layer = iter->second;
+  }
+
+  DCHECK(layer);
+  if (layer) {
+    layer->InitStack(layer_title_cache_);
+    std::vector<int> tab_ids;
+    if (use_tab_ids_list)
+      base::android::JavaIntArrayToIntVector(env, tab_ids_list, &tab_ids);
+
+    layer->SetProperties(
+        id, tab_ids, can_use_live_layer, toolbar_resource_id,
+        shadow_resource_id, contour_resource_id, border_resource_id,
+        border_inner_shadow_resource_id, tab_background_color, x, y, width,
+        height, shadow_x, shadow_y, shadow_width, shadow_height, alpha,
+        border_alpha, border_inner_shadow_alpha, contour_alpha, shadow_alpha,
+        border_scale, saturation, brightness, static_to_view_blend,
+        content_width, content_height, content_width, show_toolbar,
+        default_theme_color, toolbar_background_color, anonymize_toolbar,
+        toolbar_textbox_resource_id, toolbar_textbox_background_color,
+        toolbar_alpha, toolbar_y_offset, content_offset, side_border_scale,
+        inset_border, close_button_resource_id, close_button_on_right, pivot_x,
+        pivot_y, rotation_x, rotation_y, close_alpha, close_btn_width,
+        close_btn_asset_size, close_button_color, show_tab_title);
+  }
+}
+
 void TabListSceneLayer::PutBackgroundLayer(
     JNIEnv* env,
     const base::android::JavaParamRef<jobject>& jobj,
@@ -199,6 +304,15 @@ void TabListSceneLayer::SetDependencies(
   }
 }
 
+void TabListSceneLayer::SetStackDependencies(
+    JNIEnv* env,
+    const base::android::JavaParamRef<jobject>& jobj,
+    const base::android::JavaParamRef<jobject>& jlayer_title_cache) {
+  if (!layer_title_cache_) {
+    layer_title_cache_ = LayerTitleCache::FromJavaObject(jlayer_title_cache);
+  }
+}
+
 void TabListSceneLayer::OnDetach() {
   SceneLayer::OnDetach();
   for (auto tab : tab_map_)
