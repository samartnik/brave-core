diff --git a/components/os_crypt/key_storage_libsecret.cc b/components/os_crypt/key_storage_libsecret.cc
index 312570612ccb6ec4480a6f8d4a74accf5ba79ff8..6bd899456b99889e4b05eeec1e52cf83df66ad46 100644
--- a/components/os_crypt/key_storage_libsecret.cc
+++ b/components/os_crypt/key_storage_libsecret.cc
@@ -5,6 +5,7 @@
 #include "components/os_crypt/key_storage_libsecret.h"
 
 #include "base/base64.h"
+#include "base/command_line.h"
 #include "base/logging.h"
 #include "base/rand_util.h"
 #include "base/strings/string_number_conversions.h"
@@ -17,7 +18,7 @@ namespace {
 #if BUILDFLAG(GOOGLE_CHROME_BRANDING)
 const char kApplicationName[] = "chrome";
 #else
-const char kApplicationName[] = "chromium";
+const char kApplicationName[] = "brave";
 #endif
 
 const SecretSchema kKeystoreSchemaV2 = {
@@ -88,7 +89,17 @@ KeyStorageLibsecret::AddRandomPasswordInLibsecret() {
 
 base::Optional<std::string> KeyStorageLibsecret::GetKeyImpl() {
   LibsecretAttributesBuilder attrs;
-  attrs.Append("application", kApplicationName);
+  const char* application_name;
+  base::CommandLine* command_line = base::CommandLine::ForCurrentProcess();
+  if (command_line->HasSwitch("import-chrome")) {
+    application_name = "chrome";
+  } else if (command_line->HasSwitch("import-chromium") ||
+             command_line->HasSwitch("import-brave")) {
+    application_name = "chromium";
+  } else {
+    application_name = kApplicationName;
+  }
+  attrs.Append("application", application_name);
 
   LibsecretLoader::SearchHelper helper;
   helper.Search(&kKeystoreSchemaV2, attrs.Get(),
