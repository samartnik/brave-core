diff --git a/chrome/android/java/src/org/chromium/chrome/browser/toolbar/ToolbarManager.java b/chrome/android/java/src/org/chromium/chrome/browser/toolbar/ToolbarManager.java
index a94211924a6c2f5bf1fe3a18cfbca508c91c910f..e8fdf315ec6ce699ebb76f496f7f2c558c224f91 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/toolbar/ToolbarManager.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/toolbar/ToolbarManager.java
@@ -103,6 +103,10 @@ import org.chromium.ui.util.TokenHolder;
 
 import java.util.List;
 
+import org.chromium.chrome.browser.toolbar.bottom.BottomToolbarConfiguration;
+import org.chromium.base.supplier.ObservableSupplierImpl;
+import org.chromium.base.ApiCompatibilityUtils;
+
 /**
  * Contains logic for managing the toolbar visual component.  This class manages the interactions
  * with the rest of the application to ensure the toolbar is always visually up to date.
@@ -183,6 +187,9 @@ public class ToolbarManager implements UrlFocusChangeListener, ThemeColorObserve
     private Supplier<Boolean> mShowStartSurfaceSupplier;
     private final ScrimCoordinator mScrimCoordinator;
 
+    private boolean mIsBottomToolbarVisible;
+    private final ObservableSupplierImpl<Boolean> mBottomToolbarVisibilitySupplier;
+
     /**
      * Creates a ToolbarManager object.
      * @param controlsSizer The {@link BrowserControlsSizer} for the activity.
@@ -207,7 +214,7 @@ public class ToolbarManager implements UrlFocusChangeListener, ThemeColorObserve
      * @param overviewModeBehaviorSupplier Supplier of the overview mode manager for the current
      *                                     profile.
      */
-    public ToolbarManager(ChromeActivity activity, BrowserControlsSizer controlsSizer,
+    public ToolbarManager(ObservableSupplierImpl<Boolean> bottomToolbarVisibilitySupplier, ChromeActivity activity, BrowserControlsSizer controlsSizer,
             FullscreenManager fullscreenManager, ToolbarControlContainer controlContainer,
             Invalidator invalidator, Callback<Boolean> urlFocusChangedCallback,
             ThemeColorProvider themeColorProvider, TabObscuringHandler tabObscuringHandler,
@@ -221,6 +228,7 @@ public class ToolbarManager implements UrlFocusChangeListener, ThemeColorObserve
             ObservableSupplier<OverviewModeBehavior> overviewModeBehaviorSupplier,
             ObservableSupplier<AppMenuCoordinator> appMenuCoordinatorSupplier,
             boolean shouldShowUpdateBadge) {
+        mBottomToolbarVisibilitySupplier = bottomToolbarVisibilitySupplier;
         TraceEvent.begin("ToolbarManager.ToolbarManager");
         mActivity = activity;
         mBrowserControlsSizer = controlsSizer;
@@ -640,7 +648,7 @@ public class ToolbarManager implements UrlFocusChangeListener, ThemeColorObserve
      */
     public void enableBottomControls() {
         mBottomControlsCoordinator =
-                new BottomControlsCoordinator(mBrowserControlsSizer, mFullscreenManager,
+                new BottomControlsCoordinator(org.chromium.chrome.browser.toolbar.bottom.BottomTabSwitcherActionMenuCoordinator.createOnLongClickListener(id -> mActivity.onOptionsItemSelected(id, null)), mBrowserControlsSizer, mFullscreenManager,
                         mActivity.findViewById(R.id.bottom_controls_stub), mActivityTabProvider,
                         mAppThemeColorProvider, mShareDelegateSupplier,
                         mMenuButtonCoordinator.getMenuButtonHelperSupplier(),
@@ -648,6 +656,10 @@ public class ToolbarManager implements UrlFocusChangeListener, ThemeColorObserve
                         (reason)
                                 -> setUrlBarFocus(true, reason),
                         mOverviewModeBehaviorSupplier, mScrimCoordinator);
+        boolean isBottomToolbarVisible = BottomToolbarConfiguration.isBottomToolbarEnabled()
+                && mActivity.getResources().getConfiguration().orientation
+                        != Configuration.ORIENTATION_LANDSCAPE;
+        setBottomToolbarVisible(isBottomToolbarVisible);
     }
 
     /**
@@ -721,6 +733,8 @@ public class ToolbarManager implements UrlFocusChangeListener, ThemeColorObserve
                     newTabClickHandler, mActivity.getWindowAndroid(), mTabCountProvider,
                     mIncognitoStateProvider, mActivity.findViewById(R.id.control_container),
                     closeAllTabsAction);
+            ApiCompatibilityUtils.setAccessibilityTraversalBefore(
+                    mLocationBar.getContainerView(), R.id.bottom_toolbar);
         }
 
         TemplateUrlServiceFactory.get().runWhenLoaded(this::registerTemplateUrlObserver);
@@ -899,6 +913,12 @@ public class ToolbarManager implements UrlFocusChangeListener, ThemeColorObserve
      */
     private void onOrientationChange(int newOrientation) {
         if (mActionModeController != null) mActionModeController.showControlsOnOrientationChange();
+
+        if (mBottomControlsCoordinator != null
+                && BottomToolbarConfiguration.isBottomToolbarEnabled()) {
+            boolean isBottomToolbarVisible = newOrientation != Configuration.ORIENTATION_LANDSCAPE;
+            setBottomToolbarVisible(isBottomToolbarVisible);
+        }
     }
 
     @Override
@@ -1144,7 +1164,7 @@ public class ToolbarManager implements UrlFocusChangeListener, ThemeColorObserve
         mToolbar.updateForwardButtonVisibility(currentTab != null && currentTab.canGoForward());
         updateReloadState(tabCrashed);
         updateBookmarkButtonStatus();
-        if (mToolbar.getMenuButtonWrapper() != null) {
+        if (mToolbar.getMenuButtonWrapper() != null && !isBottomToolbarVisible()) {
             mToolbar.getMenuButtonWrapper().setVisibility(View.VISIBLE);
         }
     }
@@ -1157,6 +1177,7 @@ public class ToolbarManager implements UrlFocusChangeListener, ThemeColorObserve
         boolean editingAllowed =
                 currentTab == null || bridge == null || bridge.isEditBookmarksEnabled();
         mToolbar.updateBookmarkButton(isBookmarked, editingAllowed);
+        if (mBottomControlsCoordinator != null) {mBottomControlsCoordinator.updateBookmarkButton(isBookmarked, editingAllowed);}
     }
 
     private void updateReloadState(boolean tabCrashed) {
@@ -1328,4 +1349,21 @@ public class ToolbarManager implements UrlFocusChangeListener, ThemeColorObserve
     public View getContainerViewForTesting() {
         return mControlContainer.getView();
     }
+
+    private void setBottomToolbarVisible(boolean visible) {
+        mIsBottomToolbarVisible = visible;
+        mToolbar.onBottomToolbarVisibilityChanged(visible);
+        mBottomToolbarVisibilitySupplier.set(visible);
+        mBottomControlsCoordinator.setBottomControlsVisible(visible);
+        mMenuButtonCoordinator.setBottomMenu(isMenuFromBottom());
+    }
+
+    public boolean isBottomToolbarVisible() {
+        return mIsBottomToolbarVisible;
+    }
+
+    @Override
+    public boolean isMenuFromBottom() {
+        return mIsBottomToolbarVisible && org.chromium.chrome.browser.toolbar.bottom.BottomToolbarVariationManager.isMenuButtonOnBottom();
+    }
 }
