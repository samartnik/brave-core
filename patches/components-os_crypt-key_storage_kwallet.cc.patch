diff --git a/components/os_crypt/key_storage_kwallet.cc b/components/os_crypt/key_storage_kwallet.cc
index 10eb2a15cf7682e46c4bee2b32cd3eb8e14d10b2..1f1ab666aff4747fa434799da9ba6400bc0ff905 100644
--- a/components/os_crypt/key_storage_kwallet.cc
+++ b/components/os_crypt/key_storage_kwallet.cc
@@ -7,6 +7,7 @@
 #include <utility>
 
 #include "base/base64.h"
+#include "base/command_line.h"
 #include "base/notreached.h"
 #include "base/rand_util.h"
 #include "components/os_crypt/kwallet_dbus.h"
@@ -91,11 +92,25 @@ base::Optional<std::string> KeyStorageKWallet::GetKeyImpl() {
   if (!InitFolder())
     return base::nullopt;
 
+  const char *folder_name, *key;
+  base::CommandLine* command_line = base::CommandLine::ForCurrentProcess();
+  if (command_line->HasSwitch("import-chrome")) {
+    folder_name = "Chrome Keys";
+    key = "Chrome Safe Storage";
+  } else if (command_line->HasSwitch("import-chromium") ||
+             command_line->HasSwitch("import-brave")) {
+    folder_name = "Chromium Keys";
+    key = "Chromium Safe Storage";
+  } else {
+    folder_name = KeyStorageLinux::kFolderName;
+    key = KeyStorageLinux::kKey;
+  }
+
   // Read password
   base::Optional<std::string> password;
   error =
-      kwallet_dbus_->ReadPassword(handle_, KeyStorageLinux::kFolderName,
-                                  KeyStorageLinux::kKey, app_name_, &password);
+      kwallet_dbus_->ReadPassword(handle_, folder_name,
+                                  key, app_name_, &password);
   if (error)
     return base::nullopt;
 
@@ -117,8 +132,18 @@ base::Optional<std::string> KeyStorageKWallet::GetKeyImpl() {
 
 bool KeyStorageKWallet::InitFolder() {
   bool has_folder = false;
+  const char *folder_name;
+  base::CommandLine* command_line = base::CommandLine::ForCurrentProcess();
+  if (command_line->HasSwitch("import-chrome")) {
+    folder_name = "Chrome Keys";
+  } else if (command_line->HasSwitch("import-chromium") ||
+             command_line->HasSwitch("import-brave")) {
+    folder_name = "Chromium Keys";
+  } else {
+    folder_name = KeyStorageLinux::kFolderName;
+  }
   KWalletDBus::Error error = kwallet_dbus_->HasFolder(
-      handle_, KeyStorageLinux::kFolderName, app_name_, &has_folder);
+      handle_, folder_name, app_name_, &has_folder);
   if (error)
     return false;
 
